Step 1 - Add Javascript and jQuery
  Created a new file called game.js
  Linkd to this new external JS file from  index.html
  Added jQuery to the website

Step 2 - Create A New Pattern
  Inside game.js create a new function called nextSequence()
  Inside the new function generate a new random number between 0 and 3, and store it in a variable called randomNumber using Math.random and Math.floor
  Create a new array called buttonColours and set it to hold the sequence "red", "blue", "green", "yellow" .
  Create a new variable called randomChosenColour and use the randomNumber from step 2 to select a random colour from the buttonColours array by selecting items in array.
  create a new empty array called gamePattern.
  Add the new randomChosenColour generated in step 4 to the end of the gamePattern by .push method .

Step 3 - Show the Sequence to the User with Animations and Sounds
    Used jQuery to select the button with the same id as the randomChosenColour
    used jQuery to animate a flash to the button selected in step 1 by .animate({}). 
    Used Javascript to play the sound for the button colour selected in step 1 by audio.play(). 

Step 4 - Check Which Button is Pressed
    Use jQuery to detect when any of the buttons are clicked and trigger a handler function.
   Inside the handler, create a new variable called userChosenColour to store the id of the button that got clicked.
    create a new empty array with the name userClickedPattern.
  Add the contents of the variable userChosenColour created in step 2 to the end of this new userClickedPattern
  At this stage, if you log the userClickedPattern you should be able to build up an array in the console by clicking on different buttons.

Step 5 - Add Sounds to Button Clicks
    In the same way we played sound in nextSequence() , when a user clicks on a button, the corresponding sound should be played. 
    Create a new function called playSound() that takes a single input parameter called name.
    Refactor the code in playSound() so that it will work for both playing sound in nextSequence() and when the user clicks a button. 

Step 6 - Add Animations to User Clicks
    Create a new function called animatePress(), it should take a single input parameter called currentColour.
    inside the styles.css file,  there is a class called "pressed", it will add a box shadow and changes the background colour to grey. 
     Use jQuery to add this pressed class to the button that gets clicked inside animatePress(). 
    use Javascript to remove the pressed class after a 100 milliseconds.
