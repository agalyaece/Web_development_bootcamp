1. Adding Javascript to Websites
  done in 3 ways
    1.inline 
        <body onload = javascript code;>
        </body>
            this has limitation --- difficuilt to debug and not good to practice

    2. internal
        <body>
        <script type = "text/javascript">
          javascript code
        </script>
        </body>

    3.external
      create a new java script file and add a required javascript code 
      <body>
      <script src = "index.js" charset ="utf-8">
      </script>
      </body>
           place script tag at the end of body tag


2. Introduction to the Document Object Model (DOM)
  when our website to be interactive,then we want to change the parts of  website in the flag(responding to a click, want to update our websites)--- here comes DOM
  it catalogue the webpage into individual objects that we can select and manipulate
  converting html page into DOM is done by browser while loading webpage
  turns each of element and its associated data into tree structure --relationship matters in tree diagram

  steps to navigate : tap into DOM using javascript and navigate through this tree structure

      document.firstElementChild; ---->this tap into first child in tree
      manipulation is done by ----variableName.innerHTML = "value assigning" 

      selecting elements and doing things is done by
          document.querySelector("value to select").click();

      objects inside DOM contains:  
                1.properties: --- that describes something about objects denoted by .notation followed by property name
                    in properties we can get and set properties
                2.Methods : ---things that can do something (functions that object can do) denoted by .notation method name()

  3.. Selecting HTML Elements with Javascript
          1. document.getElementsByTagName ("name of tag") 
          2. document.getElementsById("#idName")
          3.document.getElementsByClassName(".className")
another method of selecting a single element is querySelector, like in css selectors we can use the same and can combine any of these selectors
        4. document.querySelector("#list-id a") ----->this selects the single items 
        5. document.querySelectorAll("#list-id a") ----->this selects the all items inside a target selector, it returns as a list and target this like an array


4. Manipulating and Changing Styles of HTML Elements with Javascript
  selecting style is same as that of css styles insted here we are using camel case version
  can change all css properties using javascript

5. The Separation of Concerns: Structure vs Style vs Behaviour
    in order to maintain our websites neat and east to debug, we have to maintain the idea of seperation of concerns
    HTML -- content
    css -- style websites
    javascript --- behaviour of websites

  .classList --->property of every DOM object
      The Element.classList is a read-only property that returns a live DOMTokenList collection of the class attributes of the element. This can then be used to manipulate the class list. 

      .classList.add("")
      .classList.remove("")
      .classList.toggle("") --->turns off the class when it is ON and vice-versa. It is easy for debugging when behaviour of webpage is not good


6. Text Manipulation and the Text Content Property
    Manipulation text inside the html element
      1. document.querySelector("h1").innerHTML ---->this gives text as well as the other tags enclosed by the specified html element
      document.querySelector("h1").textContent ---->this gives only the text in the selected html element

7. Manipulating HTML Element Attributes
    1. document.querySelector("a").attributes ---->this gives all the attributes associated with a
    2. document.querySelector("a").getAttributes("href") ---->this gives values for href
    3.document.querySelector("a").setAttributes("href", value to attributes) ---->this gives new values for href
      setAttributes takes two parameters
